/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vacunar24.Vistas;

import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vacunar24.Dao.ProfesionalData;
import vacunar24.Entidades.Profesional;

/**
 *
 * @author Jose
 */
public class Profesional_Vista extends javax.swing.JInternalFrame {
    private Profesional prof;
    private ProfesionalData profD;
    private ArrayList<Profesional> listaProf;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int row, int colum) {
            return false;
        }
    };
    private Frame f = JOptionPane.getFrameForComponent(this);
    private AgregarProfesional ap = new AgregarProfesional(f, true);
    public Profesional_Vista() {
        prof = new Profesional();
        profD = new ProfesionalData();
        listaProf = new ArrayList();
        initComponents();
        armarCabecera();
        llenarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProf = new javax.swing.JTable();
        jBAgregar = new javax.swing.JButton();
        jBElim = new javax.swing.JButton();
        jBMod = new javax.swing.JButton();
        jTBuscador = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1300, 550));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("REGISTRO Y CONTROL DE PROFESIONALES:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 320, 20));

        jTProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTProf);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1260, 390));

        jBAgregar.setText("Agregar Profesional");
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(jBAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 465, 190, 40));

        jBElim.setText("Eliminar");
        jBElim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBElimActionPerformed(evt);
            }
        });
        jPanel1.add(jBElim, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 470, 100, 40));

        jBMod.setText("Modificar");
        jBMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModActionPerformed(evt);
            }
        });
        jPanel1.add(jBMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 470, 120, 40));

        jTBuscador.setText("Buscar...");
        jTBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTBuscadorKeyReleased(evt);
            }
        });
        jPanel1.add(jTBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 280, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        ap.show();
    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModActionPerformed
        if (jTProf.getSelectedRow() >= 0) {
            prof = new Profesional();
            prof = profD.buscarProfesionalId((int) jTProf.getValueAt(jTProf.getSelectedRow(), 0));
            ap.getjTNombre().setText(prof.getNombre());
            ap.getjTApellido().setText(prof.getApellido());
            ap.getjTDni().setText(prof.getDni()+"");
            ap.getjTMail().setText(prof.getEmail());
            ap.getjTTel().setText(prof.getCelular());
            ap.getjTMatricula().setText(prof.getMatricula()+"");
            ap.setIdMod(prof.getIdProfesional());
            ap.setMod(true);
            ap.show();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un profesional en la tabla...");
        }
    }//GEN-LAST:event_jBModActionPerformed

    private void jBElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBElimActionPerformed
        if (jTProf.getSelectedRow() >= 0) {
            profD.eliminarProfesional((int) jTProf.getValueAt(jTProf.getSelectedRow(), 0));
            actT();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un profesional en la tabla...");
        }
    }//GEN-LAST:event_jBElimActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        if(ap.isAct()){
            actT();
        }
    }//GEN-LAST:event_jPanel1MouseMoved

    private void jTBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscadorKeyReleased
        modelo.setNumRows(0);
        for(Profesional p:listaProf){
            if(p.getNombre().toLowerCase().startsWith(jTBuscador.getText().toLowerCase())||p.getApellido().toLowerCase().startsWith(jTBuscador.getText().toLowerCase())
               || p.getIdProfesional()== Integer.parseInt(jTBuscador.getText())){
                modelo.addRow(new Object[]{p.getIdProfesional(),p.getDni(),p.getNombre(),p.getApellido(),
            p.getEmail(),p.getCelular(),p.getMatricula(),p.isEstado()});
            }
        }
    }//GEN-LAST:event_jTBuscadorKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBElim;
    private javax.swing.JButton jBMod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTBuscador;
    private javax.swing.JTable jTProf;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("Codigo");
        filaCabecera.add("Dni");
        filaCabecera.add("Nombre");
        filaCabecera.add("Apellido");
        filaCabecera.add("Email");
        filaCabecera.add("Telefono");
        filaCabecera.add("Matricula");
        filaCabecera.add("Estado");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTProf.setModel(modelo);
    }
    private void llenarTabla() {
        listaProf = profD.listarProfesionales();
        listaProf.stream().forEach(p -> {
            modelo.addRow(new Object[]{p.getIdProfesional(),p.getDni(),p.getNombre(),p.getApellido(),
            p.getEmail(),p.getCelular(),p.getMatricula(),p.isEstado()});
        });
    }
    private void borrarFilas(){
        int i = jTProf.getRowCount()-1;
        for(;i>=0;i--){
            modelo.removeRow(i);
        }
    }
    private void actT(){
        borrarFilas();
        llenarTabla();
        ap.setAct(false);
    }
}
